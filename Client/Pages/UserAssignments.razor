@page "/user/{userId:int}"
@inject HttpClient http
@inject NavigationManager navigation

@if (user == null)
{
    <p>Loading...</p>
}
else
{
    <div class="content-container">
        <div class="columns is-multiline is-variable">
            <div class="column is-8">
                <AssignmentList User="@user"
                      SelectAssignment="@SelectAssignment" />
            </div>
        </div>
    </div>
    @*<div class="content-container">
        <header class="card-header">
            <div class="twa-5x @user.Avatar"></div>
            <p class="card-header-title">
                @user.Name
            </p>
        </header>
        <div class="card-content">
            <ul class="list">
            @foreach (var assignment in user.Assignments)
            {
                <li role="presentation">
                        <div class="twa-5x @assignment.Emoji"></div>
                        <p>@assignment.Name</p>
                        <p>@assignment.Description</p>
                </li>
                }
            </ul>
        </div>
        <footer class="card-footer ">
            <ButtonFooter Class="cancel-button"
                          IconClasses="fas fa-angle-left"
                          OnClick="@CancelProduct"/>
            <ButtonFooter Class="save-button"
                          IconClasses="fas fa-save"
                          OnClick="@Save"/>
        </footer>
    </div>*@
}

@code {
    private User user;

    [Parameter] public int UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        user = await http.GetFromJsonAsync<User>($"api/users/{UserId}/assignments");
    }

    private void CancelProduct()
    {
        navigation.NavigateTo("/");
    }

    private async Task Save()
    {
        if (user.Id == 0)
        {
            await http.PostAsJsonAsync("api/products", user);
        }
        else
        {
            await http.PutAsJsonAsync("api/products", user);
        }
        navigation.NavigateTo("/");
    }

    private void SelectAssignment(Assignment assignment)
    {
        navigation.NavigateTo($"/user/{assignment.Id}");
    }
}